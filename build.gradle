buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}

	repositories {
		maven
				{
					url "https://plugins.gradle.org/m2/"
				}
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath ("com.moowork.gradle:gradle-node-plugin:1.1.1")
	}
}

apply plugin:'com.moowork.node'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}



node
		{
			version = "8.11.1"
			download = true
			nodeModulesDir = file("${rootProject.projectDir}/UserProject")
		}




task buildClientDev(type: NpmTask, dependsOn: 'npmInstall'){
	group = 'build'
	description = 'Compile client side folder for development'
	args = ['run','buildDev']
}

task buildClientUi(type: NpmTask, dependsOn: 'npmInstall'){
	group = 'build'
	description = 'Compile client side folder for development'
	args = ['run','start']
}
task buildClientWatch(type: NpmTask, dependsOn: 'npmInstall'){
	group = 'application'
	description = "Build and watches the client side assets for rebuilding"
	args = ['run','buildWatch']
}

task buildClient(type:NpmTask, dependsOn:'npmInstall'){
	group = 'build'
	description = "Compile client side folder for production"
	args = ['run','build']
}


bootRun.dependsOn(buildClientDev)
jar.dependsOn(buildClient)